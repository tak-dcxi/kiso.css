@property --color-lightest {
  syntax: "<color>";
  inherits: false;
  initial-value: #f7f7f7;
}

@property --color-light-gray {
  syntax: "<color>";
  inherits: false;
  initial-value: #f3f4f6;
}

@property --color-shaded-gray {
  syntax: "<color>";
  inherits: false;
  initial-value: #e5e7eb;
}

@property --color-darkest {
  syntax: "<color>";
  inherits: false;
  initial-value: #000;
}

@property --color-very-dark-blue {
  syntax: "<color>";
  inherits: false;
  initial-value: #111827;
}

@property --color-desaturated-blue {
  syntax: "<color>";
  inherits: false;
  initial-value: #1f2937;
}

@property --color-dark-grayish-blue {
  syntax: "<color>";
  inherits: false;
  initial-value: #374151;
}

@property --color-dark-blue {
  syntax: "<color>";
  inherits: false;
  initial-value: #1e40af;
}

@property --color-strong-blue {
  syntax: "<color>";
  inherits: false;
  initial-value: #0097d3;
}

@property --color-soft-blue {
  syntax: "<color>";
  inherits: false;
  initial-value: #60a5fa;
}

@property --color-bright-blue {
  syntax: "<color>";
  inherits: false;
  initial-value: #3b82f6;
}

@property --font-montserrat {
  syntax: "*";
  inherits: false;
  initial-value: "Montserrat", sans-serif;
}

@property --leading-tight {
  syntax: "<number>";
  inherits: false;
  initial-value: 1.25;
}

@property --leading-normal {
  syntax: "<number>";
  inherits: false;
  initial-value: 1.5;
}

@property --leading-relaxed {
  syntax: "<number>";
  inherits: false;
  initial-value: 1.75;
}

@property --rounded-md {
  syntax: "<length>";
  inherits: false;
  initial-value: 12px;
}

@property --rounded-lg {
  syntax: "<length>";
  inherits: false;
  initial-value: 32px;
}

@property --gradient-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

:root {
  --foreground-base: light-dark(
    var(--color-desaturated-blue),
    var(--color-light-gray)
  );
  --foreground-primary: light-dark(
    var(--color-strong-blue),
    var(--color-soft-blue)
  );
  --foreground-secondary: light-dark(
    var(--color-dark-blue),
    var(--color-bright-blue)
  );
  --background-base: light-dark(
    var(--color-lightest),
    var(--color-very-dark-blue)
  );
  --background-lighten: light-dark(
    var(--color-light-gray),
    var(--color-desaturated-blue)
  );
  --code-background: light-dark(
    var(--color-light-gray),
    var(--color-desaturated-blue)
  );
  --border-color: light-dark(
    var(--color-shaded-gray),
    var(--color-dark-grayish-blue)
  );
  --_font-size-min: 87.5%;
  --_font-size-max: 100%;

  background-color: var(--background-base);
  color: var(--foreground-base);

  /*
  * @prompt o3
  * https://webkit.org/blog/16993/news-from-wwdc25-web-technology-coming-this-fall-in-safari-26-beta/
  * Progress関数で1280pxの時に100%、375pxの時に87.5%を返す実装を提案してください。
  */
  font-size: clamp(
    var(--_font-size-min),
    calc(
      var(--_font-size-min) + progress(100svi, 375px, 1280px) *
        (var(--_font-size-max) - var(--_font-size-min))
    ),
    var(--_font-size-max)
  );
  text-underline-offset: calc((1lh - 1em) / 2);
  -webkit-font-smoothing: antialiased;

  /* progress()関数がサポートされていない場合 */
  @supports not (top: calc(progress(1svi, 1px, 1px) * 1px)) {
    @media (width >= 0) {
      font-size: var(--_font-size-min);
    }

    @media (width >= 640px) {
      font-size: var(--_font-size-max);
    }
  }

  &:has(:target):not(:has(:focus-visible)) {
    @media (prefers-reduced-motion: no-preference) {
      scroll-behavior: smooth;
    }
  }

  &:lang(en) {
    font-kerning: normal;
  }

  &:lang(ja) {
    font-kerning: none;
  }
}

.HomeTemplate {
  --_min-width: 64rem;
  --_gutter: clamp(1rem, 14 / 375 * 100%, 2rem);

  display: block grid;
  grid-template-columns:
    [full-start]
    minmax(var(--_gutter), 1fr)
    [content-start] minmax(0, var(--_min-width)) [content-end]
    minmax(var(--_gutter), 1fr)
    [full-end];
  row-gap: 3rlh;
  align-content: start;

  & > :where(.HomeTemplate__Main) > * {
    grid-column: content;
  }

  & > :where(.HomeTemplate__Header, .HomeTemplate__Footer) {
    grid-column: full;
  }
}

.HomeTemplate__Header {
  display: block grid;
  grid-template-columns: subgrid;
  border-block-end: 1px solid var(--border-color);
  background-color: var(--background-lighten);

  & > * {
    grid-column: content;
  }
}

.HomeTemplate__Main {
  display: contents;
}

.HomeTemplate__Footer {
  display: block grid;
  grid-template-columns: subgrid;
  border-block-start: 1px solid var(--border-color);
  background-color: var(--background-lighten);

  & > * {
    grid-column: content;
  }
}

.Hero {
  container: hero / inline-size;
}

.Hero__Layout {
  padding-block: 3rlh;

  & > * + * {
    margin-block-start: 2rlh;
  }
}

.Hero__Heading {
  line-height: var(--leading-tight);
  text-align: center;
  text-wrap: balance;

  & > * + * {
    margin-block-start: 1rlh;
  }

  & > :where(.Hero__Title) {
    margin: unset;
  }
}

.Hero__Title {
  font-family: var(--font-montserrat);
  font-size: 3rem;
  font-kerning: normal;

  @media (forced-colors: none) {
    background-image: linear-gradient(
      135deg,
      oklch(from var(--foreground-primary) calc(l - 0.1) c h),
      oklch(from var(--foreground-primary) calc(l + 0.1) c h)
    );
    background-clip: text;
    color: transparent;
  }
}

.Hero__Tagline {
  font-size: 1.25rem;
  font-kerning: normal;
  letter-spacing: 0.03em;

  &:lang(ja) {
    font-feature-settings: "palt";
    word-break: auto-phrase;
  }
}

.Hero__ActionsList {
  display: block flex;
  flex-wrap: wrap;
  gap: 2ex 1ch;
  justify-content: center;
}

.BaseButton {
  --_accent-primary: #8474fe;
  --_accent-secondary: #4d36d0;

  display: inline flow-root;
  padding-block: 1cap;
  padding-inline: 2ch;
  border-radius: var(--rounded-md);
  box-shadow: 0 12px 20px -8px oklch(from var(--_accent-secondary) l c h / 10%);
  background: linear-gradient(
      to bottom,
      oklch(from var(--_accent-primary) l c h / var(--gradient-alpha)),
      oklch(from var(--_accent-secondary) l c h / var(--gradient-alpha))
    ),
    var(--_accent-secondary);
  color: var(--color-lightest);
  vertical-align: bottom;
  transition-duration: 300ms;
  transition-property: --gradient-alpha;

  @supports (corner-shape: squircle) {
    border-radius: var(--rounded-lg);
    corner-shape: squircle;
  }

  @media (forced-colors: active) {
    border: 1px solid;
  }

  &:focus-visible {
    --gradient-alpha: 0%;
  }

  &:any-link:hover {
    @media (any-hover: hover) {
      --gradient-alpha: 0%;
    }
  }
}

.GithubButton {
  --_background-default: var(--color-darkest);
  --_background-hover: #1c1c1c;

  display: inline grid;
  grid-template-columns: 2ch 1fr;
  column-gap: 0.5ch;
  align-items: center;
  padding-block: 1cap;
  padding-inline: 2ch;
  border-radius: var(--rounded-md);
  box-shadow: 0 12px 20px -8px oklch(from var(--color-darkest) l c h / 10%);
  background-color: var(--_background-default);
  color: var(--color-lightest);
  vertical-align: bottom;
  transition-duration: 300ms;
  transition-property: background-color;

  @supports (corner-shape: squircle) {
    border-radius: var(--rounded-lg);
    corner-shape: squircle;
  }

  @media (forced-colors: active) {
    border: 1px solid;
  }

  &:focus-visible {
    background-color: var(--_background-hover);
  }

  &:any-link:hover {
    @media (any-hover: hover) {
      background-color: var(--_background-hover);
    }
  }

  & :where(svg) {
    inline-size: -webkit-fill-available;
    inline-size: -moz-available;
    inline-size: stretch;
  }
}

.SectionHeading {
  font-size: 2rem;
  text-align: center;
  text-wrap: balance;
}

.FeaturesCards {
  --_min-width: 25ic;

  container: features-cards / inline-size;
}

.FeaturesCards__Layout {
  display: block grid;
  grid-template-columns: repeat(
    auto-fit,
    minmax(min(var(--_min-width), 100%), 1fr)
  );
  gap: clamp(1ic, tan(atan2(1ic, var(--_min-width))) * 100cqi, 1.5ic);
}

.FeaturesCards__Item {
  display: block grid;
  grid-template-columns: subgrid;
  grid-row: span 2;
  gap: 1rlh 0;
  align-content: start;
  padding-block: 1.5rlh;
  padding-inline: clamp(
    1.5ic,
    tan(atan2(1.5ic, var(--_min-width))) * 100%,
    2ic
  );
  border: 1px solid var(--border-color);
  border-radius: var(--rounded-md);
  background-color: var(--background-lighten);

  @supports (corner-shape: squircle) {
    border-radius: var(--rounded-lg);
    corner-shape: squircle;
  }
}

.FeaturesCards__Heading {
  display: block flex;
  column-gap: 0.5ic;
  color: var(--foreground-primary);
  font-size: 1.25rem;
  font-kerning: normal;
  line-height: var(--leading-tight);

  &:lang(ja) {
    font-feature-settings: "palt";
    word-break: auto-phrase;
  }
}

.FeaturesCards__Description {
  line-height: var(--leading-relaxed);
  hanging-punctuation: last allow-end;

  & > :where(p) {
    inline-size: round(down, 100%, 1ic);
    inline-size: calc-size(auto, round(down, size, 1ic));
  }

  & > :where(p + p) {
    margin-block-start: 1rlh;
  }
}

.Section {
  & > * + * {
    margin-block-start: 1.5rlh;
  }
}

.InstallationMethod {
  & > * + * {
    margin-block-start: 1rlh;
  }
}

.InstallationMethod__Heading {
  font-size: 1.125rem;
  font-kerning: normal;

  &:lang(ja) {
    font-feature-settings: "palt";
    word-break: auto-phrase;
  }
}

.InstallationMethod__Code {
  display: block grid;
  overflow: auto clip;
  overscroll-behavior-inline: contain;
  padding-block: 1rlh;
  padding-inline: 3ch;
  border: 1px solid var(--border-color);
  border-radius: var(--rounded-md);
  corner-shape: squircle;
  background-color: var(--code-background);
  white-space: nowrap;
}

.Footer {
  padding-block: 2rlh;

  & > * + * {
    margin-block-start: 1.5rlh;
  }
}

.Footer__Copyright {
  text-align: center;
  text-wrap: balance;
}

.Footer__Nav {
  display: block flex;
  flex-wrap: wrap;
  gap: 1ex 2ch;
  justify-content: center;
  font-family: var(--font-montserrat);
}

.text-link {
  color: var(--foreground-primary);
  text-decoration-line: revert;

  &:focus-visible {
    text-decoration: unset;
  }

  &:any-link:hover {
    @media (any-hover: hover) {
      text-decoration: unset;
    }
  }
}
