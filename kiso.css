/*! kiso.css v1.0.2 | MIT License | https://github.com/tak-dcxi/kiso.css */

/* ======================================================
//  MARK: Universal
// ====================================================== */
*,
::before,
::after {
  /* Include padding and border in element's dimensions */
  box-sizing: border-box;

  /*
  * Prevent inline-level elements from exceeding container boundaries
  * @see https://ishadeed.com/article/min-max-css/
  */
  min-inline-size: 0;

  /* Remove default borders */
  border-width: 0;

  /* Set default border style for easier border addition */
  border-style: solid;
}

/* ======================================================
//  MARK: Document and Body Elements
// ====================================================== */
:where(:root) {
  /* Standardize font style */
  font-style: unset;

  /* Standardize font weight */
  font-weight: 400;

  /*
  * From an accessibility perspective, specify a line height of at least 1.5 times the text size within paragraphs
  * @see https://waic.jp/translations/WCAG21/#visual-presentation
  */
  line-height: 1.5;

  /* Align text to the start of the element to support both left-to-right and right-to-left languages */
  text-align: start;

  /* Remove space when punctuation marks are adjacent, and also remove leading spaces in a line */
  text-spacing-trim: trim-start;

  /* Insert a smaller-than-normal space between characters like Japanese and alphanumeric characters */
  text-autospace: normal;

  /* Apply strict line-breaking rules */
  line-break: strict;

  /* Wrap words mid-word if they do not fit within the line box */
  overflow-wrap: anywhere;

  /* Prevent mobile browsers from automatically enlarging text size */
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;

  /* Prevent layout shift caused by the appearance/disappearance of the scrollbar */
  scrollbar-gutter: stable;

  /* Remove tap highlight color to improve appearance on mobile devices */
  -webkit-tap-highlight-color: transparent;

  &:where(:lang(en)) {
    /*
    * In English, a single word on the last line is called a "widow" or "orphan" and is considered something to avoid as it makes the text harder to read.
    * Therefore, when lang="en", this prevents the last line from ending with a single word.
    */
    text-wrap: pretty;
  }
}

:where(body) {
  /* Ensure the body element occupies at least 100% of the viewport's block size */
  min-block-size: 100dvb;

  /* Reset default margin */
  margin: unset;
}

/* ======================================================
// MARK: Sections
// ------------------------------------------------------ */
:where(h1, h2, h3, h4, h5, h6) {
  /* Reset default block margins */
  margin-block: unset;

  /* Reset default font size */
  font-size: unset;

  /* Prevent the last line from ending with a single word */
  text-wrap: pretty;
}

:where(search) {
  /* Consistently display the 'search' element */
  display: block flow;
}

/* ======================================================
//  MARK: Grouping content
// ====================================================== */
:where(p, blockquote, figure, pre, address, ul, ol, dl) {
  /* Reset default block margins */
  margin-block: unset;
}

:where(blockquote, figure) {
  /* Reset default inline margins */
  margin-inline: unset;
}

:where(address:lang(ja)) {
  /* Reset font style for Japanese-specific elements */
  font-style: unset;
}

:where(ul, ol) {
  /* Remove default padding-inline-start */
  padding-inline-start: unset;

  /* In Safari, using "list-style: none" prevents screen readers from announcing lists, so use "list-style-type: """ to hide markers without affecting accessibility */
  list-style-type: "";
}

:where(dt) {
  /* Make definition terms bold */
  font-weight: 700;
}

:where(dd) {
  /* Remove default indent */
  margin-inline-start: unset;
}

:where(hr) {
  /* Set the top border width of the <hr> element to 1px */
  border-block-start-width: 1px;
}

:where(pre) {
  /* Prevent inheritance to ensure no misalignment */
  text-spacing-trim: space-all;

  /* Set to `no-autospace` as it can cause misalignment with monospaced fonts */
  text-autospace: no-autospace;

  /* Set tab size to 2 */
  tab-size: 2;

  /* Wrap text when printing */
  @media print {
    white-space: pre-wrap;
  }
}

/* ======================================================
//  MARK: Text-level semantics
// ====================================================== */
:where(b, strong) {
  /* Strengthen the weight of bold elements for emphasis */
  font-weight: 700;
}

:where(em:lang(ja)) {
  /* Strengthen the weight of emphasis elements in Japanese content */
  font-weight: 700;
}

:where(:is(i, cite, em, dfn, var):lang(ja)) {
  /* Reset font style for Japanese-specific elements */
  font-style: unset;
}

:where(small) {
  /* Set font size to 1em (same as parent element) */
  font-size: 1em;

  /* Inherit font weight */
  font-weight: inherit;
}

:where(code, kbd, samp) {
  /*
  * Set a monospace font family referencing Tailwind
  * @see https://tailwindcss.com/docs/font-family
  * Specifying 'serif' is a countermeasure for the 13px issue in Chrome
  */
  font-family: ui-monospace, sfmono-regular, menlo, monaco, consolas,
    "Liberation Mono", "Courier New", serif;

  /* Reset font size to ensure consistent display across different devices */
  font-size: unset;
}

:where(var) {
  /* Set the font family of the <var> element to serif to enhance the typographical distinction of variable names in technical content */
  font-family: serif;

  /* Reset the font family for <var> elements in Japanese content */
  &:where(:lang(ja)) {
    font-family: unset;
  }
}

:where(abbr[title]) {
  /* Display an underline */
  text-decoration-line: underline;

  /* Set the underline style to dotted */
  text-decoration-style: dotted;

  /* Display a tooltip on mouse hover */
  cursor: help;
}

:where(mark) {
  /* In forced-colors mode, the color of the mark element may not change, which can be problematic. Use system colors in forced-colors mode. */
  @media (forced-colors: active) {
    background-color: Highlight;
    color: HighlightText;
  }
}

:where(time) {
  /* Set to `no-autospace` because date notations in typography do not include spaces */
  text-autospace: no-autospace;
}

/* ======================================================
//  MARK: Links
// ====================================================== */
:where(a:any-link) {
  /* Remove default background color */
  background-color: unset;

  /* Reset text color to default or inherited value */
  color: unset;

  /* Remove underline from links */
  text-decoration-line: unset;

  /* Set text decoration thickness to 1px */
  text-decoration-thickness: 1px;

  /* Adjust underline to skip descenders for better readability */
  text-decoration-skip-ink: auto;
}

/* ======================================================
//  MARK: Embedded content
// ====================================================== */
:where(img, picture, svg, video, canvas, audio, iframe, embed, object) {
  /* Automatically adjust block size based on content */
  block-size: auto;

  /* Limit the maximum inline size to prevent overflow */
  max-inline-size: 100%;

  /* Limit the maximum block size to prevent overflow */
  max-block-size: 100%;

  /* Align to the bottom of the text */
  vertical-align: bottom;
}

:where(svg) {
  /* In forced-colors mode, the color of SVG elements may not change, which can be problematic. Use system colors in forced-colors mode. */
  @media (forced-colors: active) {
    --_svg-foreground: CanvasText;

    stroke: var(--_svg-foreground) !important;

    & [fill]:not([fill="none"]) {
      fill: var(--_svg-foreground) !important;
    }

    &:where(:any-link &) {
      --_svg-foreground: LinkText;
    }

    &:where(button:enabled &) {
      --_svg-foreground: ButtonText;
    }

    &:where(:disabled &) {
      --_svg-foreground: GrayText;
    }
  }
}

/* ======================================================
//  MARK: Tabular data
// ====================================================== */
:where(table) {
  /* Collapse borders for a more refined table design */
  border-collapse: collapse;
}

:where(caption) {
  /* Align caption text to the start of the element */
  text-align: start;
}

:where(td, th) {
  /* Remove default padding from table cells and headers */
  padding: unset;

  /* Align table cell content to the top */
  vertical-align: top;
}

:where(th) {
  /* Make table header text bold */
  font-weight: 700;

  /* Align header text to the start of the cell */
  text-align: initial;
}

/* ======================================================
//  MARK: Forms
// ====================================================== */
:where(button, input, select, textarea),
::file-selector-button {
  /* Remove default padding */
  padding: unset;

  /* Reset border-radius to default */
  border-radius: unset;

  /* Remove default background color */
  background-color: unset;

  /* Remove default text color */
  color: unset;

  /* Reset font settings to inherit from parent */
  font: unset;

  /* Reset letter-spacing to default */
  letter-spacing: unset;

  /* Reset text-alignment to default */
  text-align: unset;

  /* Reset text-transform to default */
  text-transform: unset;
}

:where([type="radio" i], [type="checkbox" i]) {
  /* Remove default margin */
  margin: unset;
}

:where([type="file" i]) {
  /* Default cursor for file input fields */
  cursor: unset;
}

:where(
    :is([type="tel"], [type="url"], [type="email"], [type="number"]):not(
        :placeholder-shown
      )
  ) {
  /*
  * Certain input types need to maintain left alignment even in right-to-left (RTL) languages. However, this only applies when the value is not empty, as the placeholder should be right-aligned.
  * @see https://rtlstyling.com/posts/rtl-styling#form-inputs
  */
  direction: ltr;
}

:where(textarea) {
  /* Remove default margin in Firefox */
  margin-block: unset;

  /* Allow vertical resizing of textareas only */
  resize: block;
}

:where(
    input:not([type="button"], [type="submit"], [type="reset"]),
    textarea,
    [contenteditable]
  ) {
  /* Set to `no-autospace` as auto-spacing during input can cause erratic behavior */
  text-autospace: no-autospace;
}

:where(button),
::file-selector-button {
  /* Prevent the occurrence of bottom whitespace */
  vertical-align: bottom;

  /* Optimize touch interaction for buttons */
  touch-action: manipulation;
}

:where(button)::-moz-focus-inner {
  /* Remove inner padding in Firefox */
  padding: unset;
}

:where(
    button,
    label[for],
    select,
    [role="tab"],
    [role="button"],
    [role="option"]
  ),
::file-selector-button {
  /* Indicate clickable elements with a pointer cursor */
  cursor: pointer;
}

::file-selector-button {
  /* Remove default border */
  border: unset;
}

:where(select:disabled) {
  /* Match the opacity of disabled selects with other disabled elements */
  opacity: inherit;
}

:where(fieldset) {
  /* Remove default margin-inline */
  margin-inline: unset;

  /* Remove default padding */
  padding: unset;
}

:where(legend) {
  /* Remove default padding-inline */
  padding-inline: unset;
}

:where(optgroup) {
  /* Reset font settings to inherit from parent */
  font: unset;
}

::placeholder {
  /* Standardize the opacity of placeholder text (it may be set lower by default in Firefox) */
  opacity: unset;
}

/* ======================================================
//  MARK: Interactive elements
// ====================================================== */
:where(summary) {
  /* Display as a block-level element to remove the default marker */
  display: block flow;

  /* Indicate clickable elements with a pointer cursor */
  cursor: pointer;

  &::-webkit-details-marker {
    /* Hide the default disclosure marker to allow for custom styling */
    display: none;
  }
}

:where(dialog, [popover]) {
  /* Reset max-inline-size limit */
  max-inline-size: unset;

  /* Reset max-block-size limit */
  max-block-size: unset;

  /* Remove default padding */
  padding: unset;
}

:where(dialog:not([open], [popover]), [popover]:not(:popover-open)) {
  /* Hide dialog and popover elements when not open */
  display: none !important;
}

::backdrop {
  /* Remove the default background color to more clearly display the underlying content */
  background-color: unset;
}

/* ======================================================
//  MARK: Focus Styles
// ====================================================== */
:where(:-moz-focusring) {
  /* Improve Firefox's outline and unify styles for input elements and buttons */
  outline: auto;
}

:where(:focus:not(:focus-visible)) {
  /* Hide the focus outline to reduce visual clutter unless the element is explicitly :focus-visible */
  outline: none;
}

:where(:focus-visible) {
  /* Add space between the content and the focus outline */
  outline-offset: 3px;
}

[tabindex="-1"]:focus-visible {
  /* Prevent programmatically focused elements from displaying an outline unless they are naturally focusable */
  outline: none !important;
}

/* ======================================================
//  MARK: Misc
// ====================================================== */
:where(:disabled, [aria-disabled="true"]) {
  /* Display the default cursor on disabled elements to reflect their non-interactive state */
  cursor: default;
}

[hidden]:not([hidden="until-found"]) {
  /* Ensure that elements intended to be hidden are not displayed, improving clarity and layout control */
  display: none !important;
}
